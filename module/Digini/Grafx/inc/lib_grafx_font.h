//-------------------------------------------------------------------------------------------------
//
//  File : lib_grafx_font.h
//
//-------------------------------------------------------------------------------------------------
//
// Copyright(c) 2020 Alain Royer.
// Email: aroyer.qc@gmail.com
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of this software
// and associated documentation files (the "Software"), to deal in the Software without
// restriction, including without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all copies or
// substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE
// AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//-------------------------------------------------------------------------------------------------

#pragma once

//-------------------------------------------------------------------------------------------------
// Include file(s)
//-------------------------------------------------------------------------------------------------

#include "grafx_cfg.h"

//-------------------------------------------------------------------------------------------------
// Define(s)
//-------------------------------------------------------------------------------------------------

#define FONT_CHARACTER_PER_FONT_MAX     256

//-------------------------------------------------------------------------------------------------
// Typedef(s)
//-------------------------------------------------------------------------------------------------

// To Get the number of system font
enum Font_e
{
    #ifdef DIGINI_USE_FONT_SIZE_8
      SYS_FT_8,
    #endif

    #ifdef DIGINI_USE_FONT_SIZE_12
      SYS_FT_12,
    #endif

    #ifdef DIGINI_USE_FONT_SIZE_16
      SYS_FT_16,
    #endif


    NB_SYSTEM_FONTS,
    LAST_STATIC_FONT  = (NB_SYSTEM_FONTS - 1),

    #include "font_cfg.lst"

    NB_OF_FONT,
    INVALID_FONT
};

struct StaticFontDescriptor_t
{
    uint8_t         Size;
    int8_t          Offset;
    int8_t          Padding;
};

//-------------------------------------------------------------------------------------------------
// Const(s)
//-------------------------------------------------------------------------------------------------

#ifdef GFX_GLOBAL

// Font 8x8
#ifdef DIGINI_USE_FONT_SIZE_8
//#pragma section rom SectionDscFont8
const StaticFontDescriptor_t FontDesc8[96] =
{
    {0x00, 0x00, 0x7A},       //  32  ' '
    {0x27, 0x00, 0x18},       //  33  '!'
    {0x63, 0x00, 0x12},       //  34  '"'
    {0x77, 0x00, 0x10},       //  35  '#'
    {0x77, 0x00, 0x10},       //  36  '$'
    {0x77, 0x00, 0x10},       //  37  '%'
    {0x77, 0x00, 0x10},       //  38  '&'
    {0x33, 0x00, 0x10},       //  39  '''
    {0x47, 0x00, 0x10},       //  40  '('
    {0x47, 0x00, 0x10},       //  41  ')'
    {0x75, 0x01, 0x10},       //  42  '*'
    {0x65, 0x01, 0x10},       //  43  '+'
    {0x33, 0x05, 0x10},       //  44  ','
    {0x61, 0x03, 0x10},       //  45  '-'
    {0x22, 0x05, 0x10},       //  46  '.'
    {0x77, 0x00, 0x10},       //  47  '/'
    {0x77, 0x00, 0x10},       //  48  '0'
    {0x67, 0x10, 0x10},       //  49  '1'
    {0x77, 0x00, 0x10},       //  50  '2'
    {0x77, 0x00, 0x10},       //  51  '3'
    {0x77, 0x00, 0x10},       //  52  '4'
    {0x77, 0x00, 0x10},       //  53  '5'
    {0x77, 0x00, 0x10},       //  54  '6'
    {0x77, 0x00, 0x10},       //  55  '7'
    {0x77, 0x00, 0x10},       //  56  '8'
    {0x77, 0x00, 0x10},       //  57  '9'
    {0x26, 0x01, 0x10},       //  58  ':'
    {0x37, 0x01, 0x10},       //  59  ';'
    {0x57, 0x00, 0x10},       //  60  '<'
    {0x63, 0x02, 0x10},       //  61  '='
    {0x57, 0x00, 0x10},       //  62  '>'
    {0x67, 0x00, 0x10},       //  63  '?'
    {0x77, 0x00, 0x10},       //  64  '@'
    {0x77, 0x00, 0x10},       //  65  'A'
    {0x77, 0x00, 0x10},       //  66  'B'
    {0x77, 0x00, 0x10},       //  67  'C'
    {0x77, 0x00, 0x10},       //  68  'D'
    {0x77, 0x00, 0x10},       //  69  'E'
    {0x77, 0x00, 0x10},       //  70  'F'
    {0x77, 0x00, 0x10},       //  71  'G'
    {0x77, 0x00, 0x10},       //  72  'H'
    {0x47, 0x00, 0x10},       //  73  'I'
    {0x77, 0x00, 0x10},       //  74  'J'
    {0x77, 0x00, 0x10},       //  75  'K'
    {0x67, 0x00, 0x10},       //  76  'L'
    {0x77, 0x00, 0x10},       //  77  'M'
    {0x77, 0x00, 0x10},       //  78  'N'
    {0x77, 0x00, 0x10},       //  79  'O'
    {0x77, 0x00, 0x10},       //  80  'P'
    {0x78, 0x00, 0x10},       //  81  'Q'
    {0x77, 0x00, 0x10},       //  82  'R'
    {0x67, 0x00, 0x10},       //  83  'S'
    {0x67, 0x00, 0x10},       //  84  'T'
    {0x77, 0x00, 0x10},       //  85  'U'
    {0x77, 0x00, 0x10},       //  86  'V'
    {0x77, 0x00, 0x10},       //  87  'W'
    {0x77, 0x00, 0x10},       //  88  'X'
    {0x87, 0x00, 0x10},       //  89  'Y'
    {0x77, 0x00, 0x10},       //  90  'Z'
    {0x47, 0x00, 0x10},       //  91  '['
    {0x87, 0x00, 0x10},       //  92  '\'
    {0x47, 0x00, 0x10},       //  93  ']'
    {0x73, 0x01, 0x10},       //  94  '^'
    {0x81, 0x07, 0x10},       //  95  '_'
    {0x33, 0x00, 0x10},       //  96  '`'
    {0x75, 0x02, 0x10},       //  97  'a'
    {0x77, 0x00, 0x10},       //  98  'b'
    {0x75, 0x02, 0x10},       //  99  'c'
    {0x77, 0x00, 0x10},       // 100  'd'
    {0x75, 0x02, 0x10},       // 101  'e'
    {0x67, 0x00, 0x10},       // 102  'f'
    {0x76, 0x02, 0x10},       // 103  'g'
    {0x77, 0x00, 0x10},       // 104  'h'
    {0x47, 0x00, 0x10},       // 105  'i'
    {0x48, 0x00, 0x10},       // 106  'j'
    {0x67, 0x00, 0x10},       // 107  'k'
    {0x47, 0x00, 0x10},       // 108  'l'
    {0x75, 0x02, 0x10},       // 109  'm'
    {0x75, 0x02, 0x10},       // 110  'n'
    {0x75, 0x02, 0x10},       // 111  'o'
    {0x76, 0x02, 0x10},       // 112  'p'
    {0x76, 0x02, 0x10},       // 113  'q'
    {0x55, 0x02, 0x10},       // 114  'r'
    {0x75, 0x02, 0x10},       // 115  's'
    {0x57, 0x00, 0x10},       // 116  't'
    {0x75, 0x02, 0x10},       // 117  'u'
    {0x75, 0x02, 0x10},       // 118  'v'
    {0x75, 0x02, 0x10},       // 119  'w'
    {0x75, 0x02, 0x10},       // 120  'x'
    {0x76, 0x02, 0x10},       // 121  'y'
    {0x65, 0x02, 0x10},       // 122  'z'
    {0x67, 0x00, 0x10},       // 123  '{'
    {0x27, 0x00, 0x10},       // 124  '|'
    {0x67, 0x00, 0x10},       // 125  '}'
    {0x72, 0x01, 0x10},       // 126  '~'
    {0x78, 0x00, 0x10}        // 127  ''      // used for the check mark
};

//#pragma section rom SectionRaw8
const uint8_t FontRaw8[664] =
{
    // caracter 32 (space) has no data
    0xF9, 0x19,
    0x91, 0xB1, 0xB1, 0x90,
    0x19, 0x09, 0x09, 0x09, 0x0E, 0x09, 0x09, 0x0E, 0x09, 0x09, 0x09, 0x09, 0x10,
    0x29, 0x2C, 0x09, 0x5C, 0x59, 0x0C, 0x29, 0x20,
    0x93, 0xA2, 0x93, 0x93, 0x93, 0x93, 0x91, 0xB2, 0x90,
    0x1A, 0x29, 0x09, 0x2A, 0x2A, 0x29, 0x0D, 0x19, 0x1A, 0x09,
    0x09, 0x0B, 0x00,
    0x19, 0x09, 0x09, 0x19, 0x19, 0x29, 0x29,
    0x92, 0x92, 0x91, 0x91, 0x90, 0x90, 0x91,
    0x09, 0x09, 0x2A, 0x1E, 0x1A, 0x29, 0x09, 0x00,
    0x19, 0x39, 0x1D, 0x19, 0x39, 0x10,
    0x09, 0x0B, 0x00,
    0xD0,
    0xB0,
    0x58, 0x49, 0x39, 0x39, 0x39, 0x39, 0x39, 0x40,
    0x0C, 0x09, 0x2B, 0x2B, 0x2B, 0x2B, 0x29, 0x0C, 0x00,
    0x19, 0x2A, 0x39, 0x39, 0x39, 0x39, 0x1D,
    0x0C, 0x09, 0x29, 0x49, 0x2A, 0x1A, 0x29, 0x2F, 0x80,
    0x0C, 0x09, 0x29, 0x49, 0x2A, 0x5B, 0x29, 0x0C, 0x00,
    0x2A, 0x2B, 0x19, 0x09, 0x09, 0x19, 0x0E, 0x39, 0x49, 0x00,
    0xF8, 0x4D, 0x59, 0x4B, 0x29, 0x0C, 0x00,
    0x1B, 0x19, 0x39, 0x4D, 0x09, 0x2B, 0x29, 0x0C, 0x00,
    0xF8, 0x29, 0x39, 0x39, 0x39, 0x49, 0x49, 0x20,
    0x0C, 0x09, 0x2B, 0x29, 0x0C, 0x09, 0x2B, 0x29, 0x0C, 0x00,
    0x0C, 0x09, 0x2B, 0x29, 0x0D, 0x49, 0x49, 0x0C, 0x00,
    0xB3, 0xB0,
    0x09, 0x09, 0x69, 0x0B, 0x00,
    0x29, 0x19, 0x19, 0x19, 0x39, 0x39, 0x39,
    0xD5, 0xD0,
    0x93, 0x93, 0x93, 0x91, 0x91, 0x91, 0x92,
    0x0B, 0x09, 0x19, 0x39, 0x29, 0x2A, 0x70, 0xA0,
    0x0C, 0x09, 0x2B, 0x0D, 0x0D, 0x0D, 0x5C, 0x00,
    0x0C, 0x09, 0x2B, 0x2B, 0x2F, 0xA2, 0xB2, 0x90,
    0xD0, 0x92, 0xB2, 0xF0, 0x92, 0xB2, 0xF0,
    0x0C, 0x09, 0x2B, 0x49, 0x49, 0x49, 0x29, 0x0C, 0x00,
    0xD0, 0x92, 0xB2, 0xB2, 0xB2, 0xB2, 0xF0,
    0xF8, 0x49, 0x4D, 0x09, 0x49, 0x4E,
    0xF8, 0x49, 0x4D, 0x09, 0x49, 0x49, 0x40,
    0x0C, 0x09, 0x2B, 0x49, 0x49, 0x1C, 0x29, 0x0C, 0x00,
    0x92, 0xB2, 0xB2, 0xFA, 0x2B, 0x2B, 0x29,
    0xB0, 0x91, 0x91, 0x91, 0x91, 0x90, 0xB0,
    0x2B, 0x49, 0x49, 0x4B, 0x2B, 0x29, 0x0C, 0x00,
    0x92, 0xB1, 0x90, 0x90, 0x91, 0xB2, 0x90, 0x91, 0x91, 0x90, 0x92, 0x90,
    0x93, 0x93, 0x93, 0x93, 0x93, 0x93, 0xD0,
    0x92, 0xC0, 0xFB, 0x08, 0x0B, 0x2B, 0x2B, 0x29,
    0x92, 0xC1, 0xD0, 0xB0, 0xD1, 0xC2, 0xB2, 0x90,
    0x0C, 0x09, 0x2B, 0x2B, 0x2B, 0x2B, 0x29, 0x0C, 0x00,
    0xD0, 0x92, 0xB2, 0xF0, 0x94, 0x94, 0x94,
    0x0C, 0x09, 0x2B, 0x2B, 0x2B, 0x2B, 0x29, 0x0C, 0x59,
    0xD0, 0x92, 0xB2, 0xF0, 0x92, 0xB2, 0xB2, 0x90,
    0x0B, 0x09, 0x1B, 0x4B, 0x4B, 0x19, 0x0B, 0x00,
    0xD1, 0x93, 0x93, 0x93, 0x93, 0x93, 0x91,
    0x92, 0xB2, 0xB2, 0xB2, 0xB2, 0xB2, 0x90, 0xC0,
    0x92, 0xB2, 0xB2, 0xB2, 0xB2, 0x90, 0x90, 0x92, 0xA1,
    0x92, 0xB2, 0xB2, 0xB0, 0x80, 0xFB, 0x0C, 0x29,
    0x92, 0xB2, 0x90, 0x90, 0x92, 0xA2, 0x90, 0x90, 0x92, 0xB2, 0x90,
    0x93, 0xB3, 0x90, 0x91, 0x92, 0xB4, 0x95, 0x95, 0x92,
    0xE3, 0x93, 0x93, 0x93, 0x93, 0x94, 0xE0,
    0xD1, 0x91, 0x91, 0x91, 0x91, 0xB0,
    0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x90,
    0xB1, 0x91, 0x91, 0x91, 0x91, 0xD0,
    0x1A, 0x29, 0x09, 0x09, 0x29,
    0xFF,
    0x90, 0x91, 0x90,
    0x0C, 0x59, 0x0F, 0x29, 0x0D,
    0x94, 0x94, 0xD0, 0x92, 0xB2, 0xB2, 0xF0,
    0x0C, 0x09, 0x2B, 0x49, 0x29, 0x0C, 0x00,
    0x49, 0x49, 0x0F, 0x2B, 0x2B, 0x29, 0x0D,
    0x0C, 0x09, 0x2F, 0x09, 0x5C, 0x00,
    0x1B, 0x09, 0x2C, 0x19, 0x39, 0x39, 0x39, 0x20,
    0x0C, 0x09, 0x2B, 0x29, 0x0D, 0x49, 0x0C, 0x00,
    0x94, 0x94, 0xD0, 0x92, 0xB2, 0xB2, 0xB2, 0x90,
    0x09, 0x4A, 0x19, 0x19, 0x19, 0x0B,
    0x19, 0x4A, 0x19, 0x19, 0x19, 0x1C, 0x00,
    0x93, 0x93, 0x91, 0xB0, 0x90, 0xB1, 0x90, 0x90, 0x91, 0x90,
    0xA1, 0x91, 0x91, 0x91, 0x91, 0x90, 0xB0,
    0x09, 0x09, 0x0F, 0x80, 0x80, 0xB2, 0xB2, 0x90,
    0xD0, 0x92, 0xB2, 0xB2, 0xB2, 0x90,
    0x0C, 0x09, 0x2B, 0x2B, 0x29, 0x0C, 0x00,
    0xD0, 0x92, 0xB2, 0xB2, 0xF0, 0x94,
    0x0F, 0x2B, 0x2B, 0x29, 0x0D, 0x49,
    0x90, 0xC1, 0x92, 0x92, 0x92,
    0x0C, 0x09, 0x5C, 0x59, 0x0C, 0x00,
    0x09, 0x29, 0x1C, 0x09, 0x29, 0x29, 0x3A,
    0x92, 0xB2, 0xB2, 0xB2, 0x90, 0xD0,
    0x92, 0xB2, 0xB2, 0x90, 0x90, 0x92, 0xA1,
    0x92, 0xB2, 0xB0, 0x80, 0xF8, 0x09, 0x09, 0x00,
    0x92, 0x90, 0x90, 0x92, 0xA2, 0x90, 0x90, 0x92, 0x90,
    0x92, 0xB2, 0xB2, 0x90, 0xD4, 0x90, 0xC0,
    0xD2, 0x92, 0x92, 0x92, 0xD0,
    0x2A, 0x19, 0x39, 0x1A, 0x49, 0x39, 0x4A,
    0xD1, 0xD0,
    0xA4, 0x93, 0x94, 0xA1, 0x93, 0x91, 0xA2,
    0x0A, 0x0B, 0x0A, 0x00,
    0x49, 0x3B, 0x29, 0x09, 0x09, 0x19, 0x09, 0x2A, 0x3A, 0x48, 0x30
};
#endif

// Font 12x12
#ifdef DIGINI_USE_FONT_SIZE_12
//#pragma section rom SectionDscFont12
const StaticFontDescriptor_t FontDesc12[96] =
{
    {0x00, 0x00, 0x7C},       //  32  ' '
    {0x2C, 0x00, 0x2F},       //  33  '!'
    {0x64, 0x01, 0x22},       //  34  '"'
    {0xAB, 0x01, 0x20},       //  35  '#'
    {0x7B, 0x01, 0x20},       //  36  '$'
    {0x9A, 0x02, 0x20},       //  37  '%'
    {0xBC, 0x00, 0x20},       //  38  '&'
    {0x33, 0x01, 0x20},       //  39  '''
    {0x5C, 0x00, 0x20},       //  40  '('
    {0x5C, 0x00, 0x20},       //  41  ')'
    {0x8A, 0x01, 0x20},       //  42  '*'
    {0x8A, 0x01, 0x20},       //  43  '+'
    {0x33, 0x09, 0x20},       //  44  ','
    {0x82, 0x05, 0x20},       //  45  '-'
    {0x22, 0x0A, 0x20},       //  46  '.'
    {0xBC, 0x00, 0x20},       //  47  '/'
    {0x8C, 0x00, 0x20},       //  48  '0'
    {0x5C, 0x20, 0x30},       //  49  '1'
    {0x8C, 0x00, 0x20},       //  50  '2'
    {0x8C, 0x00, 0x20},       //  51  '3'
    {0x8C, 0x00, 0x20},       //  52  '4'
    {0x8C, 0x00, 0x20},       //  53  '5'
    {0x8C, 0x00, 0x20},       //  54  '6'
    {0x8C, 0x00, 0x20},       //  55  '7'
    {0x8C, 0x00, 0x20},       //  56  '8'
    {0x8C, 0x00, 0x20},       //  57  '9'
    {0x28, 0x02, 0x20},       //  58  ':'
    {0x39, 0x02, 0x20},       //  59  ';'
    {0x6B, 0x01, 0x20},       //  60  '<'
    {0x76, 0x03, 0x20},       //  61  '='
    {0x7B, 0x01, 0x20},       //  62  '>'
    {0x8C, 0x00, 0x20},       //  63  '?'
    {0xCC, 0x00, 0x20},       //  64  '@'
    {0xBC, 0x00, 0x20},       //  65  'A'
    {0xAC, 0x00, 0x20},       //  66  'B'
    {0xAC, 0x00, 0x20},       //  67  'C'
    {0xAC, 0x00, 0x20},       //  68  'D'
    {0x9C, 0x00, 0x20},       //  69  'E'
    {0x9C, 0x00, 0x20},       //  70  'F'
    {0xAC, 0x00, 0x20},       //  71  'G'
    {0x9C, 0x00, 0x20},       //  72  'H'
    {0x2C, 0x00, 0x20},       //  73  'I'
    {0x8C, 0x00, 0x20},       //  74  'J'
    {0xAC, 0x00, 0x20},       //  75  'K'
    {0x8C, 0x00, 0x20},       //  76  'L'
    {0xBC, 0x00, 0x20},       //  77  'M'
    {0x9C, 0x00, 0x20},       //  78  'N'
    {0xAC, 0x00, 0x20},       //  79  'O'
    {0x9C, 0x00, 0x20},       //  80  'P'
    {0xAC, 0x00, 0x20},       //  81  'Q'
    {0xAC, 0x00, 0x20},       //  82  'R'
    {0xAC, 0x00, 0x20},       //  83  'S'
    {0xAC, 0x00, 0x20},       //  84  'T'
    {0x9C, 0x00, 0x20},       //  85  'U'
    {0xBC, 0x00, 0x20},       //  86  'V'
    {0xBC, 0x00, 0x20},       //  87  'W'
    {0x9C, 0x00, 0x20},       //  88  'X'
    {0xAC, 0x00, 0x20},       //  89  'Y'
    {0x9C, 0x00, 0x20},       //  90  'Z'
    {0x5C, 0x00, 0x20},       //  91  '['
    {0xBC, 0x00, 0x20},       //  92  '\'
    {0x5C, 0x00, 0x20},       //  93  ']'
    {0x86, 0x00, 0x20},       //  94  '^'
    {0xC2, 0x0A, 0x20},       //  95  '_'
    {0x33, 0x01, 0x20},       //  96  '`'
    {0x89, 0x03, 0x20},       //  97  'a'
    {0x8C, 0x00, 0x20},       //  98  'b'
    {0x79, 0x03, 0x20},       //  99  'c'
    {0x8C, 0x00, 0x20},       // 100  'd'
    {0x79, 0x03, 0x20},       // 101  'e'
    {0x6B, 0x01, 0x20},       // 102  'f'
    {0x8C, 0x03, 0x20},       // 103  'g'
    {0x8B, 0x01, 0x20},       // 104  'h'
    {0x2C, 0x00, 0x20},       // 105  'i'
    {0x4F, 0x00, 0x20},       // 106  'j'
    {0x7B, 0x01, 0x20},       // 107  'k'
    {0x2C, 0x00, 0x20},       // 108  'l'
    {0xA9, 0x03, 0x20},       // 109  'm'
    {0x89, 0x03, 0x20},       // 110  'n'
    {0x89, 0x03, 0x20},       // 111  'o'
    {0x8B, 0x04, 0x20},       // 112  'p'
    {0x8B, 0x04, 0x20},       // 113  'q'
    {0x59, 0x03, 0x20},       // 114  'r'
    {0x79, 0x03, 0x20},       // 115  's'
    {0x5B, 0x01, 0x20},       // 116  't'
    {0x89, 0x03, 0x20},       // 117  'u'
    {0x79, 0x03, 0x20},       // 118  'v'
    {0xB9, 0x03, 0x20},       // 119  'w'
    {0x79, 0x03, 0x20},       // 120  'x'
    {0x7B, 0x04, 0x20},       // 121  'y'
    {0x79, 0x03, 0x20},       // 122  'z'
    {0x5C, 0x00, 0x20},       // 123  '{'
    {0x2C, 0x00, 0x20},       // 124  '|'
    {0x5C, 0x00, 0x20},       // 125  '}'
    {0x83, 0x05, 0x20},       // 126  '~'
    {0xCC, 0x00, 0x20}        // 127  ''                 // used for the check mark
};

//#pragma section rom SectionRaw12
const uint8_t FontRaw12[1182] =
{
    // caracter 32 (space) has no data
    0xFF, 0x3B,
    0x91, 0xB1, 0xB1, 0xB1, 0x90,
    0x29, 0x19, 0x39, 0x19, 0x29, 0x19, 0x1F, 0xFB, 0x19, 0x19, 0x1F, 0xFB, 0x19, 0x19, 0x29, 0x19, 0x39, 0x19, 0x20,
    0x28, 0x4A, 0x2F, 0x08, 0x0D, 0x3C, 0x3D, 0x08, 0x0F, 0x2A, 0x48, 0x20,
    0x09, 0x49, 0x18, 0x2A, 0x18, 0x19, 0x19, 0x19, 0x59, 0x59, 0x59, 0x19, 0x19, 0x18, 0x1A, 0x28, 0x19, 0x49, 0x00,
    0x1C, 0x4E, 0x39, 0x29, 0x39, 0x29, 0x4C, 0x5B, 0x59, 0x09, 0x2B, 0x29, 0x0C, 0x3A, 0x19, 0x3A, 0x2F, 0x82, 0xC1, 0x90,
    0x09, 0x0B, 0x00,
    0x29, 0x1A, 0x09, 0x29, 0x19, 0x29, 0x29, 0x29, 0x39, 0x29, 0x3A, 0x29,
    0x92, 0xA3, 0x92, 0x93, 0x92, 0x92, 0x92, 0x91, 0x92, 0x90, 0xA1, 0x92,
    0x08, 0x38, 0x0A, 0x1A, 0x09, 0x19, 0x2B, 0x1F, 0xF1, 0xB2, 0x91, 0x90, 0xA1, 0xA0, 0x83, 0x80,
    0x29, 0x59, 0x59, 0x59, 0x2F, 0xF2, 0x95, 0x95, 0x95, 0x92,
    0x09, 0x0B, 0x00,
    0xFF,
    0xB0,
    0x71, 0x87, 0x09, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x70, 0x87, 0x10,
    0x1B, 0x2D, 0x0A, 0x1C, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x3C, 0x1A, 0x0D, 0x2B, 0x10,
    0x29, 0x1A, 0x0D, 0x0A, 0x19, 0x29, 0x29, 0x29, 0x29, 0x29, 0x29, 0x29,
    0x1B, 0x2D, 0x0A, 0x1C, 0x39, 0x59, 0x4A, 0x3A, 0x3A, 0x3A, 0x3A, 0x3F, 0xF0,
    0x1B, 0x2D, 0x09, 0x2C, 0x39, 0x4A, 0x2B, 0x3B, 0x5C, 0x3B, 0x2A, 0x0D, 0x2B, 0x10,
    0x49, 0x4A, 0x4A, 0x3B, 0x29, 0x09, 0x28, 0x19, 0x19, 0x19, 0x09, 0x29, 0x0F, 0xF4, 0x95, 0x90,
    0xE0, 0xE0, 0x95, 0x95, 0xD1, 0xE5, 0xA5, 0x95, 0xB2, 0xF9, 0x1C, 0x10,
    0x1C, 0x1E, 0x09, 0x2B, 0x59, 0x0A, 0x1E, 0x0A, 0x2B, 0x3B, 0x39, 0x09, 0x29, 0x0D, 0x2B, 0x10,
    0xFF, 0x49, 0x49, 0x59, 0x49, 0x59, 0x59, 0x49, 0x59, 0x59, 0x59, 0x30,
    0x1B, 0x2D, 0x09, 0x3B, 0x3B, 0x39, 0x0D, 0x1D, 0x09, 0x3B, 0x3B, 0x39, 0x0D, 0x2B, 0x10,
    0x1B, 0x2D, 0x09, 0x29, 0x09, 0x3B, 0x3B, 0x2A, 0x0E, 0x1A, 0x09, 0x5B, 0x29, 0x0E, 0x1C, 0x10,
    0xB7, 0xB0,
    0x09, 0x09, 0x74, 0x90, 0xB0,
    0x39, 0x29, 0x29, 0x29, 0x29, 0x38, 0x49, 0x49, 0x49, 0x49, 0x49,
    0xFD, 0x75, 0xFD,
    0x95, 0x95, 0x95, 0x95, 0x95, 0x93, 0x93, 0x93, 0x93, 0x93, 0x94,
    0x1B, 0x2D, 0x0A, 0x1C, 0x39, 0x4A, 0x49, 0x49, 0x49, 0x59, 0x75, 0x95, 0x92,
    0x3B, 0x5F, 0x2A, 0x3A, 0x19, 0x19, 0x0A, 0x09, 0x1C, 0x0B, 0x19, 0x09, 0x0B, 0x09, 0x19, 0x0B, 0x09, 0x18, 0x19, 0x08, 0x0F, 0x19, 0x0E, 0x2A, 0x29, 0x5A, 0x40,
    0x3A, 0x7A, 0x69, 0x09, 0x59, 0x09, 0x59, 0x09, 0x49, 0x29, 0x39, 0x29, 0x3E, 0x2F, 0x81, 0x94, 0x91, 0x94, 0x90, 0x96, 0x90,
    0xF1, 0xF8, 0x09, 0x49, 0x09, 0x49, 0x09, 0x49, 0x0F, 0x1F, 0x80, 0x94, 0xC5, 0xB5, 0xFA, 0x0F, 0x10,
    0x2C, 0x2F, 0x19, 0x3C, 0x58, 0x09, 0x79, 0x79, 0x79, 0x79, 0x58, 0x19, 0x3A, 0x0F, 0x3C, 0x10,
    0xE2, 0xF8, 0x09, 0x49, 0x09, 0x5B, 0x5B, 0x5B, 0x5B, 0x5B, 0x5B, 0x49, 0x0F, 0x80, 0xE2,
    0xFF, 0xB6, 0x96, 0x96, 0xFF, 0xB6, 0x96, 0x96, 0xFF, 0x90,
    0xFF, 0xB6, 0x96, 0x96, 0xF0, 0xF0, 0x96, 0x96, 0x96, 0x96, 0x96,
    0x2C, 0x2F, 0x19, 0x3C, 0x58, 0x09, 0x79, 0x79, 0x2E, 0x2E, 0x59, 0x09, 0x3A, 0x0F, 0x3C, 0x10,
    0x94, 0xB4, 0xB4, 0xB4, 0xB4, 0xFF, 0xD4, 0xB4, 0xB4, 0xB4, 0xB4, 0x90,
    0xFF, 0xF0,
    0x59, 0x59, 0x59, 0x59, 0x59, 0x59, 0x59, 0x5B, 0x3C, 0x1A, 0x0D, 0x2B, 0x10,
    0x95, 0xB4, 0x90, 0x93, 0x91, 0x92, 0x92, 0x91, 0x93, 0x90, 0xB2, 0xB0, 0x92, 0xA2, 0x91, 0x93, 0x91, 0x94, 0x90, 0x94, 0xC5, 0x90,
    0x95, 0x95, 0x95, 0x95, 0x95, 0x95, 0x95, 0x95, 0x95, 0x95, 0xFF,
    0xA4, 0xD4, 0xE2, 0xF2, 0xD0, 0x82, 0x80, 0xB0, 0x90, 0x90, 0xB0, 0x90, 0x90, 0xB0, 0x90, 0x90, 0xB1, 0xA1, 0xB1, 0xA1, 0xB1, 0xA1, 0xB2, 0x82, 0x90,
    0x94, 0xC3, 0xC3, 0xD2, 0xB0, 0x82, 0xB0, 0x91, 0xB1, 0x81, 0xB1, 0x90, 0xB2, 0x80, 0xB2, 0xD3, 0xC4, 0x90,
    0x2B, 0x3F, 0x19, 0x39, 0x09, 0x5B, 0x5B, 0x5B, 0x5B, 0x5B, 0x59, 0x09, 0x39, 0x1F, 0x3B, 0x20,
    0xE1, 0xF0, 0x93, 0xC4, 0xB3, 0xFA, 0x0E, 0x19, 0x69, 0x69, 0x69, 0x69, 0x60,
    0x2B, 0x3F, 0x19, 0x39, 0x09, 0x5B, 0x5B, 0x5B, 0x5B, 0x38, 0x0B, 0x3B, 0x09, 0x39, 0x1F, 0x82, 0xB1, 0x80,
    0xE2, 0xF1, 0x93, 0xA0, 0x94, 0x90, 0x93, 0xA0, 0xF1, 0xD3, 0x91, 0xA2, 0x92, 0xA1, 0x93, 0xA0, 0x93, 0xA0, 0x94, 0xA0,
    0x1D, 0x2F, 0x0A, 0x3C, 0x5C, 0x7D, 0x5D, 0x70, 0xB6, 0xB4, 0x90, 0xF2, 0xD1,
    0xFF, 0xB3, 0x97, 0x97, 0x97, 0x97, 0x97, 0x97, 0x97, 0x97, 0x97, 0x93,
    0x94, 0xB4, 0xB4, 0xB4, 0xB4, 0xB4, 0xB4, 0xB4, 0xB4, 0xC2, 0xA0, 0xE2, 0xC1,
    0x96, 0xB6, 0x90, 0x94, 0x91, 0x94, 0x92, 0x92, 0x93, 0x92, 0x93, 0x92, 0x94, 0x90, 0x95, 0x90, 0x96, 0xA7, 0xA7, 0xA3,
    0x83, 0x83, 0xA2, 0x82, 0xB1, 0xA1, 0xB1, 0xA1, 0x90, 0x90, 0xA0, 0x91, 0x90, 0xA0, 0x91, 0x90, 0xA0, 0x91, 0xB0, 0xB2, 0xA0, 0xA3, 0x92, 0x93, 0x92, 0x93, 0x92, 0x91,
    0x94, 0xC2, 0xA0, 0x92, 0x92, 0x90, 0x93, 0xC4, 0xA5, 0xA4, 0xC3, 0x90, 0x92, 0x92, 0x90, 0x94, 0xB4, 0x90,
    0x95, 0xC3, 0xA0, 0x93, 0x92, 0x91, 0x93, 0x91, 0x94, 0xB6, 0x97, 0x97, 0x97, 0x97, 0x97, 0x93,
    0xFF, 0x95, 0x95, 0x95, 0xA5, 0x95, 0x95, 0xA5, 0x95, 0x95, 0xFF, 0x90,
    0xFB, 0x29, 0x29, 0x29, 0x29, 0x29, 0x29, 0x29, 0x2F, 0x90,
    0x87, 0x19, 0x71, 0x97, 0x19, 0x71, 0x97, 0x19, 0x71, 0x97, 0x19, 0x71, 0x97, 0x19, 0x71, 0x97, 0x18,
    0xF9, 0x29, 0x29, 0x29, 0x29, 0x29, 0x29, 0x29, 0x2F, 0xB0,
    0x29, 0x4B, 0x3B, 0x29, 0x19, 0x19, 0x19, 0x09, 0x39,
    0xFF, 0xF0,
    0x90, 0x91, 0x90,
    0x0C, 0x1E, 0x09, 0x29, 0x3B, 0x1D, 0x0A, 0x19, 0x09, 0x29, 0x0E, 0x1B, 0x09,
    0x95, 0x95, 0x95, 0x90, 0xA1, 0xE0, 0xA1, 0xC3, 0xB3, 0xB3, 0xC1, 0xF9, 0x09, 0x0A, 0x10,
    0x1B, 0x1F, 0x81, 0xB4, 0x94, 0x94, 0xA1, 0x90, 0xD1, 0xB0,
    0x59, 0x59, 0x59, 0x1A, 0x09, 0x0F, 0x91, 0xC3, 0xB3, 0xB3, 0xC1, 0xA0, 0xE1, 0xA0, 0x90,
    0x1A, 0x2C, 0x09, 0x2F, 0xF9, 0x49, 0x29, 0x0C, 0x2A, 0x10,
    0x1B, 0x0C, 0x09, 0x2C, 0x0C, 0x19, 0x39, 0x39, 0x39, 0x39, 0x39, 0x20,
    0x1A, 0x09, 0x0F, 0x91, 0xC3, 0xB3, 0xC1, 0xA0, 0xE1, 0xA0, 0x95, 0x90, 0x91, 0xA0, 0xE1, 0xC0,
    0x95, 0x95, 0x95, 0x90, 0xB0, 0xFA, 0x2B, 0x3B, 0x3B, 0x3B, 0x3B, 0x39,
    0xB3, 0xFF,
    0x19, 0x19, 0x71, 0x91, 0x91, 0x91, 0x91, 0x91, 0x91, 0x91, 0x91, 0xF8, 0x00,
    0x94, 0x94, 0x92, 0xB1, 0x90, 0x90, 0x91, 0xC1, 0xC1, 0xA0, 0x90, 0x91, 0x90, 0x92, 0xB2, 0x90,
    0xFF, 0xF0,
    0x90, 0x91, 0x90, 0xFC, 0x0A, 0x0B, 0x19, 0x1B, 0x19, 0x1B, 0x19, 0x1B, 0x19, 0x1B, 0x19, 0x1B, 0x19, 0x19,
    0x90, 0xB0, 0xFA, 0x2B, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x39,
    0x1B, 0x2D, 0x0A, 0x1C, 0x3B, 0x3B, 0x3C, 0x1A, 0x0D, 0x2B, 0x10,
    0x90, 0xA1, 0xE0, 0xA1, 0xC3, 0xB3, 0xC1, 0xF9, 0x09, 0x0A, 0x19, 0x59, 0x59, 0x50,
    0x1A, 0x09, 0x0F, 0x91, 0xC3, 0xB3, 0xC1, 0xA0, 0xE1, 0xA0, 0x95, 0x95, 0x95, 0x90,
    0x90, 0xF9, 0x19, 0x29, 0x29, 0x29, 0x29, 0x29, 0x20,
    0x0C, 0x0F, 0x82, 0xD3, 0xC3, 0xD2, 0xF8, 0x0C, 0x00,
    0x18, 0x29, 0x29, 0x1F, 0x90, 0x92, 0x92, 0x92, 0x92, 0xB1, 0xA0,
    0x93, 0xB3, 0xB3, 0xB3, 0xB3, 0xB3, 0xB2, 0xFA, 0x0B, 0x09,
    0x92, 0xB2, 0xB2, 0x90, 0x90, 0x91, 0x90, 0x91, 0x90, 0x92, 0xA3, 0xA3, 0xA1,
    0x92, 0x82, 0xB1, 0xA1, 0x90, 0x90, 0xA0, 0x91, 0x90, 0xA0, 0x91, 0xB0, 0xB2, 0xA0, 0xA3, 0x92, 0x93, 0x92, 0x93, 0x92, 0x91,
    0x92, 0xC0, 0xA0, 0x90, 0x92, 0xA3, 0xA3, 0xA2, 0x90, 0x90, 0x92, 0xB2, 0x90,
    0x92, 0xB2, 0xB2, 0xB2, 0xB2, 0x90, 0x90, 0x91, 0xC2, 0xA4, 0x93, 0x93, 0xA3,
    0xFD, 0x39, 0x3A, 0x2A, 0x2A, 0x39, 0x3F, 0xD0,
    0x1A, 0x0B, 0x09, 0x29, 0x29, 0x19, 0x29, 0x39, 0x29, 0x29, 0x2B, 0x1A,
    0xF9, 0x3F, 0x90,
    0xA1, 0xB2, 0x92, 0x92, 0x93, 0x92, 0x91, 0x92, 0x92, 0x90, 0xB0, 0xA1,
    0x0A, 0x2F, 0x92, 0xA0,
    0x70, 0xA7, 0xA7, 0xA1, 0x84, 0xA2, 0x93, 0x93, 0x92, 0xA3, 0xA1, 0x94, 0xA0, 0xA5, 0x90, 0x96, 0xC6, 0xB7, 0x09, 0x70
};
#endif

// Font 16x16
#ifdef DIGINI_USE_FONT_SIZE_16
//#pragma section rom SectionDscFont16
const StaticFontDescriptor_t FontDesc16[96] =
{
    {0x00, 0x00, 0x70},       //  32  ' '
    {0x6E, 0x00, 0x20},       //  33  '!'
    {0xC6, 0x00, 0x24},       //  34  '"'
    {0xEE, 0x00, 0x20},       //  35  '#'
    {0xEE, 0x00, 0x20},       //  36  '$'
    {0xEE, 0x00, 0x20},       //  37  '%'
    {0xEE, 0x00, 0x20},       //  38  '&'
    {0x66, 0x00, 0x20},       //  39  '''
    {0x8E, 0x00, 0x20},       //  40  '('
    {0x8E, 0x00, 0x20},       //  41  ')'
    {0xEA, 0x02, 0x20},       //  42  '*'
    {0xCA, 0x02, 0x20},       //  43  '+'
    {0x66, 0x0A, 0x20},       //  44  ','
    {0xC2, 0x06, 0x20},       //  45  '-'
    {0x44, 0x0A, 0x20},       //  46  '.'
    {0xEE, 0x00, 0x20},       //  47  '/'
    {0xEE, 0x00, 0x20},       //  48  '0'
    {0xCE, 0x10, 0x30},       //  49  '1'
    {0xEE, 0x00, 0x20},       //  50  '2'
    {0xEE, 0x00, 0x20},       //  51  '3'
    {0xEE, 0x00, 0x20},       //  52  '4'
    {0xEE, 0x00, 0x20},       //  53  '5'
    {0xEE, 0x00, 0x20},       //  54  '6'
    {0xEE, 0x00, 0x20},       //  55  '7'
    {0xEE, 0x00, 0x20},       //  56  '8'
    {0xEE, 0x00, 0x20},       //  57  '9'
    {0x4C, 0x02, 0x20},       //  58  ':'
    {0x6E, 0x02, 0x20},       //  59  ';'
    {0xAE, 0x00, 0x20},       //  60  '<'
    {0xC8, 0x04, 0x20},       //  61  '='
    {0xAE, 0x00, 0x20},       //  62  '>'
    {0xCE, 0x00, 0x20},       //  63  '?'
    {0xEF, 0x00, 0x20},       //  64  '@'
    {0xEE, 0x00, 0x20},       //  65  'A'
    {0xEE, 0x00, 0x20},       //  66  'B'
    {0xEE, 0x00, 0x20},       //  67  'C'
    {0xEE, 0x00, 0x20},       //  68  'D'
    {0xEE, 0x00, 0x20},       //  69  'E'
    {0xEE, 0x00, 0x20},       //  70  'F'
    {0xEE, 0x00, 0x20},       //  71  'G'
    {0xEE, 0x00, 0x20},       //  72  'H'
    {0x8E, 0x00, 0x20},       //  73  'I'
    {0xEE, 0x00, 0x20},       //  74  'J'
    {0xEE, 0x00, 0x20},       //  75  'K'
    {0xEE, 0x00, 0x20},       //  76  'L'
    {0xEE, 0x00, 0x20},       //  77  'M'
    {0xEE, 0x00, 0x20},       //  78  'N'
    {0xEE, 0x00, 0x20},       //  79  'O'
    {0xEE, 0x00, 0x20},       //  80  'P'
    {0xE0, 0x00, 0x22},       //  81  'Q'               Third byte low nibble is a flag to put size at 16
    {0xEE, 0x00, 0x20},       //  82  'R'
    {0xEE, 0x00, 0x20},       //  83  'S'
    {0xCE, 0x00, 0x20},       //  84  'T'
    {0xEE, 0x00, 0x20},       //  85  'U'
    {0xEE, 0x00, 0x20},       //  86  'V'
    {0xEE, 0x00, 0x20},       //  87  'W'
    {0xEE, 0x00, 0x20},       //  88  'X'
    {0x0E, 0x00, 0x21},       //  89  'Y'
    {0xEE, 0x00, 0x20},       //  90  'Z'
    {0x8E, 0x00, 0x20},       //  91  '['
    {0x0E, 0x00, 0x21},       //  92  '\'
    {0x8E, 0x00, 0x20},       //  93  ']'
    {0xE6, 0x02, 0x20},       //  94  '^'
    {0x02, 0x0E, 0x21},       //  95  '_'
    {0x66, 0x00, 0x20},       //  96  '`'
    {0xEA, 0x04, 0x20},       //  97  'a'
    {0xEE, 0x00, 0x20},       //  98  'b'
    {0xEA, 0x04, 0x20},       //  99  'c'
    {0xEE, 0x00, 0x20},       // 100  'd'
    {0xEA, 0x04, 0x20},       // 101  'e'
    {0xBD, 0x01, 0x20},       // 102  'f'
    {0xEC, 0x04, 0x20},       // 103  'g'
    {0xDE, 0x00, 0x20},       // 104  'h'
    {0x8E, 0x00, 0x20},       // 105  'i'
    {0xA0, 0x00, 0x22},       // 106  'j'
    {0xCE, 0x00, 0x20},       // 107  'k'
    {0x8E, 0x00, 0x20},       // 108  'l'
    {0xEA, 0x04, 0x20},       // 109  'm'
    {0xEA, 0x04, 0x20},       // 110  'n'
    {0xEA, 0x04, 0x20},       // 111  'o'
    {0xEC, 0x04, 0x20},       // 112  'p'
    {0xEC, 0x04, 0x20},       // 113  'q'
    {0xCA, 0x04, 0x20},       // 114  'r'
    {0xEA, 0x04, 0x20},       // 115  's'
    {0xAE, 0x00, 0x20},       // 116  't'
    {0xEA, 0x04, 0x20},       // 117  'u'
    {0xEA, 0x04, 0x20},       // 118  'v'
    {0xEA, 0x04, 0x20},       // 119  'w'
    {0xEA, 0x04, 0x20},       // 120  'x'
    {0xEC, 0x04, 0x20},       // 121  'y'
    {0xCA, 0x04, 0x20},       // 122  'z'
    {0xCE, 0x00, 0x20},       // 123  '{'
    {0x4E, 0x00, 0x20},       // 124  '|'
    {0xCE, 0x00, 0x20},       // 125  '}'
    {0xE4, 0x02, 0x20},       // 126  '~'
    {0xEE, 0x00, 0x20}        // 127  ''      // used for the check mark
};

//#pragma section rom SectionRaw16
const uint8_t FontRaw16[1516] =
{
    // caracter 32 (space) has no data
    0x0B, 0x1B, 0x0F, 0xFF, 0xD0, 0xB1, 0xB1, 0xB7, 0x5B, 0x1B, 0x00,
    0xB3, 0xF3, 0xF3, 0xF3, 0xF3, 0xF3, 0xB0,
    0x3A, 0x3A, 0x3A, 0x3A, 0x2A, 0x3A, 0x3A, 0x3A, 0x0F, 0xFF, 0xB1, 0xA3, 0xA3, 0xA3, 0xA1, 0xFF, 0xFB, 0x0A, 0x3A, 0x3A, 0x3A, 0x2A, 0x3A, 0x3A, 0x3A, 0x30,
    0x6A, 0x72, 0xA5, 0xFB, 0x0F, 0xF2, 0xA4, 0xA2, 0xA5, 0xFA, 0x3F, 0xA5, 0xA2, 0xA4, 0xA2, 0xFF, 0x0F, 0xB5, 0xA7, 0x2A, 0x60,
    0xB6, 0xE5, 0xF4, 0xF8, 0x3C, 0x7C, 0x7C, 0x7C, 0x7C, 0x7C, 0x7C, 0x7C, 0x3F, 0x84, 0xF5, 0xE6, 0xB0,
    0x3D, 0x6F, 0x4A, 0x3A, 0x3A, 0x3A, 0x4F, 0x6D, 0x5D, 0x6F, 0x4B, 0x1F, 0xA2, 0xFA, 0x4A, 0x2B, 0x4A, 0x2E, 0x1B, 0x1E, 0x1A,
    0x1B, 0x1B, 0x1B, 0x1F, 0x80, 0xB1,
    0x3B, 0x2C, 0x1B, 0x2B, 0x3B, 0x2B, 0x3B, 0x3B, 0x3B, 0x4B, 0x3B, 0x4B, 0x4C, 0x3B,
    0xB3, 0xC4, 0xB4, 0xB3, 0xB4, 0xB3, 0xB3, 0xB3, 0xB2, 0xB3, 0xB2, 0xB1, 0xC2, 0xB3,
    0x1A, 0x3A, 0x3B, 0x1B, 0x4F, 0x6D, 0x3F, 0xFF, 0xB3, 0xD6, 0xF4, 0xB1, 0xB3, 0xA3, 0xA1,
    0x3B, 0x7B, 0x7B, 0x7B, 0x3F, 0xFF, 0x3B, 0x7B, 0x7B, 0x7B, 0x30,
    0x1B, 0x1B, 0x1B, 0x1F, 0x80, 0xB1,
    0xFF, 0xF0,
    0xFF,
    0x73, 0x97, 0x2A, 0x71, 0xB7, 0x0C, 0x7C, 0x7C, 0x7C, 0x7C, 0x7C, 0x7C, 0x7C, 0x7C, 0x7C, 0x70, 0xB7, 0x10,
    0x2F, 0x3F, 0xB1, 0xB3, 0xB0, 0xB4, 0xF8, 0x2F, 0xA1, 0xA0, 0xF0, 0xB0, 0xF0, 0xB0, 0xF0, 0xA1, 0xFA, 0x2F, 0x84, 0xB0, 0xB3, 0xB1, 0xFB, 0x3F, 0x20,
    0x3B, 0x6C, 0x5D, 0x5D, 0x7B, 0x7B, 0x7B, 0x7B, 0x7B, 0x7B, 0x7B, 0x7B, 0x3F, 0xFF,
    0x2F, 0x82, 0xFB, 0x1B, 0x4F, 0x6A, 0x72, 0xA7, 0x1B, 0x5E, 0x2F, 0xA1, 0xF5, 0xB7, 0x0B, 0x71, 0xB6, 0xFF, 0xFE,
    0x2F, 0x3F, 0xB1, 0xB3, 0xB0, 0xB5, 0xB7, 0x1B, 0x70, 0xB6, 0xD7, 0xD7, 0x2B, 0x72, 0xF5, 0xB0, 0xB3, 0xB1, 0xFB, 0x3F, 0x20,
    0x5D, 0x6E, 0x5F, 0x4F, 0x83, 0xB1, 0xB2, 0xB2, 0xB1, 0xB3, 0xB1, 0xB3, 0xB1, 0xFF, 0xFB, 0x7B, 0x71, 0xB7, 0x1B, 0x71, 0xB1,
    0xFF, 0xFF, 0x71, 0xB7, 0x1F, 0xA2, 0xFC, 0x71, 0xB7, 0x2B, 0x71, 0xB7, 0x1F, 0x5B, 0x0B, 0x3B, 0x1F, 0xB3, 0xF2,
    0x3F, 0x4F, 0x83, 0xB7, 0x0B, 0x70, 0xB7, 0x1B, 0x71, 0xFA, 0x2F, 0xC0, 0xC3, 0xB0, 0xB5, 0xF5, 0xB0, 0xB3, 0xB1, 0xFB, 0x3F, 0x20,
    0xFF, 0xFF, 0x5F, 0x5B, 0x70, 0xB7, 0x0B, 0x70, 0xB7, 0x0B, 0x70, 0xB7, 0x0B, 0x71, 0xB7, 0x1B, 0x71, 0xB7, 0x1B, 0x50,
    0x2F, 0x3F, 0xB1, 0xB3, 0xB0, 0xB5, 0xF5, 0xB0, 0xB3, 0xB2, 0xF9, 0x3F, 0x92, 0xB3, 0xB0, 0xB5, 0xF5, 0xB0, 0xB3, 0xB1, 0xFB, 0x3F, 0x20,
    0x2F, 0x3F, 0xB1, 0xB3, 0xB0, 0xB5, 0xF5, 0xB0, 0xB3, 0xC0, 0xFC, 0x2F, 0xA7, 0x1B, 0x71, 0xB7, 0x0B, 0x70, 0xB3, 0xF8, 0x4F, 0x30,
    0xFF, 0x77, 0xFF,
    0x1B, 0x1B, 0x1B, 0x1B, 0x77, 0x71, 0xB1, 0xB1, 0xB0, 0xF9, 0x0B, 0x10,
    0x5B, 0x4B, 0x4B, 0x4B, 0x4B, 0x4B, 0x4B, 0x5B, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B, 0x6B,
    0xFF, 0xF7, 0x77, 0x77, 0x7F, 0xFF,
    0xB6, 0xB6, 0xB6, 0xB6, 0xB6, 0xB6, 0xB5, 0xB4, 0xB4, 0xB4, 0xB4, 0xB4, 0xB4, 0xB5,
    0x1F, 0x2F, 0x90, 0xC1, 0xF8, 0x3B, 0x7B, 0x6C, 0x5C, 0x5C, 0x5C, 0x6B, 0x77, 0x77, 0xB7, 0xB3,
    0x2F, 0x3F, 0xB1, 0xA5, 0xA0, 0xA7, 0xD1, 0xB1, 0xD0, 0xD0, 0xD0, 0x91, 0x90, 0xD0, 0x91, 0x90, 0xD0, 0x91, 0x90, 0xD0, 0xD0, 0xD1, 0xC0, 0xD4, 0xC1, 0xA7, 0x2F, 0xA4, 0xF8, 0x10,
    0x4B, 0x70, 0xD6, 0xF4, 0xB1, 0xB2, 0xB3, 0xB1, 0xA5, 0xA0, 0xB5, 0xF5, 0xFF, 0xFF, 0xB5, 0xF5, 0xF5, 0xF5, 0xB0,
    0xFA, 0x2F, 0xC0, 0xB4, 0xB0, 0xB5, 0xF5, 0xF4, 0xB0, 0xFB, 0x1F, 0xB1, 0xB4, 0xB0, 0xB5, 0xF5, 0xF4, 0xB0, 0xFC, 0x0F, 0xA2,
    0x2F, 0x3F, 0xB1, 0xB3, 0xB0, 0xB5, 0xF5, 0xF5, 0xF7, 0x1B, 0x71, 0xB7, 0x1B, 0x71, 0xB5, 0xB0, 0xB3, 0xC0, 0xFB, 0x3F, 0x20,
    0xF9, 0x3F, 0xB1, 0xB3, 0xC0, 0xB4, 0xB0, 0xB5, 0xF5, 0xF5, 0xF5, 0xF5, 0xF5, 0xF4, 0xB0, 0xB3, 0xC0, 0xFB, 0x1F, 0x93,
    0xFF, 0xFF, 0x71, 0xB7, 0x1B, 0x71, 0xB7, 0x1F, 0xB1, 0xFB, 0x1B, 0x71, 0xB7, 0x1B, 0x71, 0xB7, 0x1F, 0xFF, 0xB0,
    0xFF, 0xFF, 0x71, 0xB7, 0x1B, 0x71, 0xB7, 0x1F, 0xB1, 0xFB, 0x1B, 0x71, 0xB7, 0x1B, 0x71, 0xB7, 0x1B, 0x71, 0xB7, 0x10,
    0x2F, 0x3F, 0xB1, 0xB3, 0xF8, 0x5F, 0x71, 0xB7, 0x1B, 0x3F, 0x93, 0xF9, 0x5F, 0x5F, 0x5B, 0x0B, 0x4B, 0x0F, 0xC2, 0xFA,
    0xB5, 0xF5, 0xF5, 0xF5, 0xF5, 0xF5, 0xFF, 0xFF, 0xB5, 0xF5, 0xF5, 0xF5, 0xF5, 0xF5, 0xB0,
    0xFF, 0x1B, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x1F, 0xF0,
    0x5F, 0x5F, 0x71, 0xB7, 0x1B, 0x71, 0xB7, 0x1B, 0x71, 0xB7, 0x1F, 0x5F, 0x5F, 0x5B, 0x0B, 0x3B, 0x1F, 0xB3, 0xF2,
    0xB5, 0xF4, 0xB0, 0xB3, 0xB1, 0xB2, 0xB2, 0xB1, 0xB3, 0xB0, 0xB4, 0xF5, 0xF5, 0xB0, 0xB4, 0xB1, 0xB3, 0xB2, 0xB2, 0xB3, 0xB1, 0xB4, 0xB0, 0xB5, 0xB0,
    0xB7, 0x1B, 0x71, 0xB7, 0x1B, 0x71, 0xB7, 0x1B, 0x71, 0xB7, 0x1B, 0x71, 0xB7, 0x1B, 0x71, 0xB7, 0x1B, 0x71, 0xFF, 0xFB,
    0xB5, 0xF5, 0xF8, 0x3F, 0xA1, 0xFF, 0xFF, 0xD0, 0xB0, 0xF1, 0x91, 0xF5, 0xF5, 0xF5, 0xF5, 0xF5, 0xF5, 0xB0,
    0xB5, 0xF5, 0xF8, 0x4F, 0x93, 0xFA, 0x2F, 0xB1, 0xF0, 0xB0, 0xF1, 0xFB, 0x2F, 0xA3, 0xF9, 0x4F, 0x85, 0xF5, 0xF5, 0xB0,
    0x2F, 0x3F, 0xB1, 0xB3, 0xB0, 0xB5, 0xF5, 0xF5, 0xF5, 0xF5, 0xF5, 0xF5, 0xF5, 0xB0, 0xB3, 0xB1, 0xFB, 0x3F, 0x20,
    0xFA, 0x2F, 0xC0, 0xB4, 0xB0, 0xB5, 0xF5, 0xF4, 0xB0, 0xFC, 0x0F, 0xA2, 0xB7, 0x1B, 0x71, 0xB7, 0x1B, 0x71, 0xB7, 0x1B, 0x71,
    0x2F, 0x3F, 0xB1, 0xB3, 0xB0, 0xB5, 0xF5, 0xF5, 0xF5, 0xF5, 0xF5, 0xF5, 0xF5, 0xB0, 0xB3, 0xB1, 0xFB, 0x3F, 0x73, 0xC7, 0x1B,
    0xFA, 0x2F, 0xC0, 0xB4, 0xB0, 0xB5, 0xF5, 0xF4, 0xB0, 0xFC, 0x0F, 0xA2, 0xB3, 0xB1, 0xB4, 0xB0, 0xB5, 0xF5, 0xF5, 0xF5, 0xB0,
    0x2F, 0x3F, 0xB1, 0xB4, 0xF5, 0xF7, 0x2D, 0x70, 0xF7, 0xF7, 0x0D, 0x72, 0xF5, 0xF4, 0xB1, 0xFB, 0x3F, 0x20,
    0xFF, 0xF3, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB3,
    0xB5, 0xF5, 0xF5, 0xF5, 0xF5, 0xF5, 0xF5, 0xF5, 0xF5, 0xF5, 0xF5, 0xB0, 0xB3, 0xB1, 0xFB, 0x3F, 0x20,
    0xB5, 0xF5, 0xF5, 0xF5, 0xF5, 0xF5, 0xF5, 0xF5, 0xB0, 0xB3, 0xB2, 0xB1, 0xB4, 0xF6, 0xD7, 0x0B, 0x72, 0x95,
    0xB5, 0xF5, 0xF5, 0xF5, 0xF5, 0xF5, 0xF1, 0x91, 0xF0, 0xB0, 0xFF, 0xFF, 0xD1, 0xFA, 0x3F, 0x85, 0xF5, 0xB0,
    0xB5, 0xF5, 0xF5, 0xB0, 0xB3, 0xB2, 0xB1, 0xB4, 0xF6, 0xD7, 0xD6, 0xF4, 0xB1, 0xB2, 0xB3, 0xB0, 0xB5, 0xF5, 0xF5, 0xB0,
    0xB7, 0xF7, 0xF7, 0xF7, 0xB0, 0xB5, 0xB2, 0xB3, 0xB4, 0xB1, 0xB6, 0xF7, 0x0D, 0x72, 0xB7, 0x3B, 0x73, 0xB7, 0x3B, 0x73, 0xB5,
    0xFF, 0xFB, 0x70, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0x0F, 0xFF, 0xB0,
    0xFF, 0xB3, 0xB3, 0xB3, 0xB3, 0xB3, 0xB3, 0xB3, 0xB3, 0xB3, 0xB3, 0xFF,
    0xB7, 0x3C, 0x73, 0xC7, 0x3C, 0x73, 0xC7, 0x3C, 0x73, 0xC7, 0x3C, 0x73, 0xC7, 0x3C, 0x73, 0xC7, 0x3C, 0x73, 0xC7, 0x3B,
    0xFF, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x3F, 0xFB,
    0x4B, 0x70, 0xD6, 0xF4, 0xB1, 0xB2, 0xB3, 0xB0, 0xB5, 0xB0,
    0xFF, 0xFF,
    0xB1, 0xB1, 0xB1, 0xB2, 0xC1, 0xB0,
    0x1F, 0x84, 0xFA, 0x72, 0xA7, 0x2B, 0x2F, 0xA0, 0xFF, 0x85, 0xF5, 0xB0, 0xFC, 0x2F, 0xA0,
    0xB7, 0x1B, 0x71, 0xB7, 0x1B, 0x71, 0xFA, 0x2F, 0xC0, 0xB4, 0xB0, 0xB5, 0xF5, 0xF5, 0xF5, 0xF9, 0x2B, 0x0F, 0xC0, 0xB1, 0xC2,
    0x2F, 0x3F, 0xB1, 0xB4, 0xF5, 0xF7, 0x1B, 0x71, 0xB7, 0x2B, 0x4B, 0x0F, 0xC2, 0xF9, 0x00,
    0x71, 0xB7, 0x1B, 0x71, 0xB7, 0x1B, 0x2F, 0xA0, 0xFC, 0x0B, 0x4F, 0x5F, 0x5F, 0x5F, 0x5B, 0x0B, 0x2D, 0x0F, 0xC2, 0xC1, 0xB0,
    0x2F, 0x3F, 0xB1, 0xA5, 0xA0, 0xB5, 0xFF, 0xFE, 0x0B, 0x72, 0xA7, 0x2F, 0xB3, 0xF8, 0x10,
    0x3D, 0x3F, 0x1B, 0x1A, 0x1B, 0x6B, 0x6B, 0x4F, 0x90, 0xF9, 0x2B, 0x6B, 0x6B, 0x6B, 0x6B, 0x40,
    0x2F, 0x3F, 0xB1, 0xB3, 0xB0, 0xB5, 0xF5, 0xB0, 0xB3, 0xC0, 0xFC, 0x2D, 0x0B, 0x71, 0xB0, 0x96, 0xA1, 0xFB, 0x2F, 0x82,
    0xB7, 0x0B, 0x70, 0xB7, 0x0B, 0x70, 0xB7, 0x0F, 0x92, 0xFB, 0x0B, 0x3B, 0x0B, 0x4F, 0x4F, 0x4F, 0x4F, 0x4F, 0x4B,
    0x1B, 0x3B, 0x77, 0x1D, 0x1D, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x1F, 0xF0,
    0x5B, 0x5B, 0x77, 0x7D, 0x3D, 0x5B, 0x5B, 0x5B, 0x5B, 0x5B, 0x5B, 0x5B, 0x4B, 0x0F, 0x80, 0xE2,
    0xB7, 0xB7, 0xB7, 0xB7, 0xB3, 0xF2, 0xB0, 0xB1, 0xB1, 0xB0, 0xB2, 0xF3, 0xF3, 0xB0, 0xB2, 0xB1, 0xB1, 0xB2, 0xB0, 0xB3, 0xB0,
    0xD1, 0xD3, 0xB3, 0xB3, 0xB3, 0xB3, 0xB3, 0xB3, 0xB3, 0xB3, 0xB3, 0xB1, 0xFF,
    0xC3, 0xB0, 0xD1, 0xFF, 0xFF, 0xFA, 0x0F, 0x19, 0x1F, 0x5F, 0x5F, 0x5F, 0x5B,
    0xB0, 0xD2, 0xFC, 0x0C, 0x3B, 0x0B, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5B,
    0x2F, 0x3F, 0xB1, 0xB3, 0xB0, 0xB5, 0xF5, 0xF5, 0xF5, 0xB0, 0xB3, 0xB1, 0xFB, 0x3F, 0x20,
    0xFA, 0x2F, 0xC0, 0xB4, 0xB0, 0xB5, 0xF5, 0xF5, 0xF5, 0xF8, 0x3B, 0x0F, 0xC0, 0xB0, 0xD2, 0xB7, 0x1B, 0x71,
    0x2F, 0xA0, 0xFC, 0x0B, 0x4F, 0x5F, 0x5F, 0x5F, 0x5B, 0x0B, 0x3C, 0x0F, 0xC2, 0xD0, 0xB7, 0x1B, 0x71, 0xB0,
    0xB1, 0xF9, 0x0F, 0xE3, 0xD5, 0xC6, 0xC6, 0xB7, 0xB7, 0xB7, 0xB7,
    0x2F, 0x91, 0xFB, 0x0B, 0x71, 0xB7, 0x2F, 0x95, 0xF9, 0x72, 0xB7, 0x1B, 0x0F, 0xB1, 0xF9, 0x20,
    0x1B, 0x5B, 0x5B, 0x5B, 0x3F, 0xFB, 0x1B, 0x5B, 0x5B, 0x5B, 0x5B, 0x6B, 0x5E, 0x4C,
    0xB5, 0xF5, 0xF5, 0xF5, 0xF5, 0xF5, 0xF5, 0xB0, 0xB3, 0xC0, 0xFC, 0x2D, 0x0B,
    0xB5, 0xF5, 0xF5, 0xF5, 0xF5, 0xF8, 0x3C, 0x0C, 0x1C, 0x2F, 0x94, 0xF6, 0xD3,
    0xB5, 0xF5, 0xF5, 0xF5, 0xF1, 0x91, 0xF0, 0xB0, 0xFF, 0xFF, 0x0C, 0x1C, 0x2A, 0x3A, 0x10,
    0xB5, 0xF8, 0x3C, 0x1B, 0x1B, 0x4F, 0x6D, 0x7D, 0x6F, 0x4B, 0x1B, 0x1C, 0x3F, 0x85, 0xB0,
    0xB5, 0xF5, 0xF5, 0xF5, 0xF5, 0xB0, 0xB3, 0xC0, 0xFC, 0x2D, 0x0B, 0x71, 0xB7, 0x0B, 0x2F, 0xA2, 0xF8, 0x20,
    0xFF, 0xF5, 0xC5, 0xC5, 0xC5, 0xC5, 0xC5, 0xC5, 0xFF, 0xF0,
    0x6C, 0x4E, 0x4B, 0x6B, 0x7B, 0x6B, 0x4D, 0x5D, 0x70, 0xB7, 0x0B, 0x7B, 0x70, 0xB7, 0xE6, 0xC0,
    0xFF, 0xF7, 0xFF, 0xF0,
    0xC6, 0xE7, 0xB7, 0x0B, 0x7B, 0x70, 0xB7, 0x0D, 0x5D, 0x4B, 0x6B, 0x7B, 0x6B, 0x4E, 0x4C, 0x60,
    0x1C, 0x3A, 0x0E, 0x1F, 0x1E, 0x0A, 0x3C, 0x10,
    0x59, 0x72, 0xB7, 0x0D, 0x6F, 0x4B, 0x1B, 0x2B, 0x3B, 0x0B, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0xFF, 0xF0
};
#endif

 #if defined(DIGINI_USE_FONT_SIZE_8) || defined(DIGINI_USE_FONT_SIZE_12) || defined (DIGINI_USE_FONT_SIZE_16)

  const StaticFontDescriptor_t* StaticFontDescriptor[NB_SYSTEM_FONTS] =
  {
    #ifdef DIGINI_USE_FONT_SIZE_8
      FontDesc8,
    #endif
    #ifdef DIGINI_USE_FONT_SIZE_12
      FontDesc12,
    #endif
    #ifdef DIGINI_USE_FONT_SIZE_16
      FontDesc16,
    #endif
  };

  const uint8_t* FontRaw[NB_SYSTEM_FONTS] =
  {
    #ifdef DIGINI_USE_FONT_SIZE_8
      FontRaw8,
    #endif
    #ifdef DIGINI_USE_FONT_SIZE_12
      FontRaw12,
    #endif
    #ifdef DIGINI_USE_FONT_SIZE_16
      FontRaw16,
    #endif
  };
 #endif // defined(DIGINI_USE_FONT_SIZE_8) || defined(DIGINI_USE_FONT_SIZE_12) || defined (DIGINI_USE_FONT_SIZE_16)

#else

 #ifdef DIGINI_USE_FONT_SIZE_8
  extern const StaticFontDescriptor_t  FontDesc8[96];
  extern const uint8_t                 FontRaw8[664];
 #endif

 #ifdef DIGINI_USE_FONT_SIZE_12
  extern const StaticFontDescriptor_t  FontDesc12[96];
  extern const uint8_t                 FontRaw12[1182];
 #endif

 #ifdef DIGINI_USE_FONT_SIZE_16
  extern const StaticFontDescriptor_t  FontDesc16[96];
  extern const uint8_t                 FontRaw16[1516];
 #endif

 #if defined(DIGINI_USE_FONT_SIZE_8) || defined(DIGINI_USE_FONT_SIZE_12) || defined (DIGINI_USE_FONT_SIZE_16)
  extern const StaticFontDescriptor_t* StaticFontDescriptor    [NB_SYSTEM_FONTS];
  extern const uint8_t*                FontRaw                 [NB_SYSTEM_FONTS];
 #endif // defined(DIGINI_USE_FONT_SIZE_8) || defined(DIGINI_USE_FONT_SIZE_12) || defined (DIGINI_USE_FONT_SIZE_16)

#endif // GFX_GLOBAL

//-------------------------------------------------------------------------------------------------
